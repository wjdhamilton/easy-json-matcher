c
exit
(string_validator.valid? json) && (0)
(string_validator.valid? json) && 0
string_validator.valid? json && 0
string_validator.valid? json
string_validator.valid?
string_validator.valid? json && json =~ DEFAULT_DATE_REGEXP
s
n
s
n
s
n
s
c
s
string_validator.valid? json
string_validator.valid?
json =~ DEFAULT_DATE_REGEXP
json
s
n
s
validator
n
content[key.to_s]
content
key
s
n
s
c
exit
content
s
content
n
s
exit
_get_content_for :date
get_content_for :date
key
content
for_validation
n
s
key
s
content
n
s
valid_json
exit
json =~ DEFAULT_DATE_REGEXP
json = "hello"
json =~ DEFAULT_DATE_REGEXP
string_validator.valid? json
@json = "1978-01-15"
json = "1978-01-15"
json
exit
bt
exit
pp e.backtrace
require 'pp'
e.backtrace
e.stack
e.stacktrace
e.stack_trace
e.stack_tracr
n
c
string_validator
exit
pp self
self
json
exit
json
c
attributes_valid?
json
c
json
c
json
c
json
exit
n
validator.valid? json
json
validator
n
c
b Node#_use_validator
c
json
c
validator
c
b Node#_use_validator
exit
e
n
json
c
json
exit
ext
json.class.name
json
n
c
exit
content
c
json
c
json
exit
json
exit
__FILE__
file = File.open('james/gems/JSONAPIMatcher/lib/jsonapi_matcher/node.rb')
file = File.open('~/gems/JSONAPIMatcher/lib/jsonapi_matcher')
file = File.open('~/gems/JSONAPIMatcher/lib/jsonapi_matcher/node.rb')
require 'ripper'
_valid_attribute?
_valid_attribute? :number
b JSONAPIMatcher::Node#_valid_attribute?
pwd
b :32
b ~/gems/JSONAPIMatcher/lib/jsonapi_matcher/node.rb:32
b ~/JSONAPIMatcher/lib/jsonapi_matcher/node.rb:32
_valid_attribute?
_valid_attribute
_valid_attribute? :number
_valid_attribute :number
s
exit
validators.keys
s
pp validators
require 'pp'
pp validators
validators
exit
validators
c
exit
validator.public_methods(false)
validator
validtor
n
exit
e
n
validator_class.new options: opts
validator_class
